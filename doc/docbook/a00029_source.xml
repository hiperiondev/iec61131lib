<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_a00029_source" xml:lang="en-US">
<title>util_murhash.h</title>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_a00029_source_1l00001"/>00001 <emphasis role="comment">/*-----------------------------------------------------------------------------</emphasis>
<anchor xml:id="_a00029_source_1l00002"/>00002 <emphasis role="comment">&#32;*&#32;MurmurHash3&#32;was&#32;written&#32;by&#32;Austin&#32;Appleby,&#32;and&#32;is&#32;placed&#32;in&#32;the&#32;public</emphasis>
<anchor xml:id="_a00029_source_1l00003"/>00003 <emphasis role="comment">&#32;*&#32;domain.</emphasis>
<anchor xml:id="_a00029_source_1l00004"/>00004 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_a00029_source_1l00005"/>00005 <emphasis role="comment">&#32;*&#32;This&#32;implementation&#32;was&#32;written&#32;by&#32;Shane&#32;Day,&#32;and&#32;is&#32;also&#32;public&#32;domain.</emphasis>
<anchor xml:id="_a00029_source_1l00006"/>00006 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_a00029_source_1l00007"/>00007 <emphasis role="comment">&#32;*&#32;This&#32;is&#32;a&#32;portable&#32;ANSI&#32;C&#32;implementation&#32;of&#32;MurmurHash3_x86_32&#32;(Murmur3A)</emphasis>
<anchor xml:id="_a00029_source_1l00008"/>00008 <emphasis role="comment">&#32;*&#32;with&#32;support&#32;for&#32;progressive&#32;processing.</emphasis>
<anchor xml:id="_a00029_source_1l00009"/>00009 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_a00029_source_1l00010"/>00010 
<anchor xml:id="_a00029_source_1l00011"/>00011 <emphasis role="preprocessor">#ifndef&#32;PMURHASH_H_</emphasis>
<anchor xml:id="_a00029_source_1l00012"/>00012 <emphasis role="preprocessor">#define&#32;PMURHASH_H_</emphasis>
<anchor xml:id="_a00029_source_1l00013"/>00013 
<anchor xml:id="_a00029_source_1l00015"/>00015 <emphasis role="comment">//&#32;Determine&#32;what&#32;native&#32;type&#32;to&#32;use&#32;for&#32;uint32_t</emphasis>
<anchor xml:id="_a00029_source_1l00016"/>00016 
<anchor xml:id="_a00029_source_1l00017"/>00017 <emphasis role="comment">//&#32;We&#32;can&apos;t&#32;use&#32;the&#32;name&#32;&apos;uint32_t&apos;&#32;here&#32;because&#32;it&#32;will&#32;conflict&#32;with</emphasis>
<anchor xml:id="_a00029_source_1l00018"/>00018 <emphasis role="comment">//&#32;any&#32;version&#32;provided&#32;by&#32;the&#32;system&#32;headers&#32;or&#32;application.</emphasis>
<anchor xml:id="_a00029_source_1l00019"/>00019 
<anchor xml:id="_a00029_source_1l00020"/>00020 <emphasis role="comment">//&#32;First&#32;look&#32;for&#32;special&#32;cases</emphasis>
<anchor xml:id="_a00029_source_1l00021"/>00021 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)</emphasis>
<anchor xml:id="_a00029_source_1l00022"/>00022 <emphasis role="preprocessor">#define&#32;MH_UINT32&#32;unsigned&#32;long</emphasis>
<anchor xml:id="_a00029_source_1l00023"/>00023 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_a00029_source_1l00024"/>00024 
<anchor xml:id="_a00029_source_1l00025"/>00025 <emphasis role="comment">//&#32;If&#32;the&#32;compiler&#32;says&#32;it&apos;s&#32;C99&#32;then&#32;take&#32;its&#32;word&#32;for&#32;it</emphasis>
<anchor xml:id="_a00029_source_1l00026"/>00026 <emphasis role="preprocessor">#if&#32;!defined(MH_UINT32)&#32;&amp;&amp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00027"/>00027 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(defined(__STDC_VERSION__)&#32;&amp;&amp;&#32;__STDC_VERSION__&#32;&gt;=&#32;199901L)</emphasis>
<anchor xml:id="_a00029_source_1l00028"/>00028 <emphasis role="preprocessor">#include&#32;&lt;stdint.h&gt;</emphasis>
<anchor xml:id="_a00029_source_1l00029"/>00029 <emphasis role="preprocessor">#define&#32;MH_UINT32&#32;uint32_t</emphasis>
<anchor xml:id="_a00029_source_1l00030"/>00030 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_a00029_source_1l00031"/>00031 
<anchor xml:id="_a00029_source_1l00032"/>00032 <emphasis role="comment">//&#32;Otherwise&#32;try&#32;testing&#32;against&#32;max&#32;value&#32;macros&#32;from&#32;limit.h</emphasis>
<anchor xml:id="_a00029_source_1l00033"/>00033 <emphasis role="preprocessor">#if&#32;!defined(MH_UINT32)</emphasis>
<anchor xml:id="_a00029_source_1l00034"/>00034 <emphasis role="preprocessor">#include&#32;&lt;limits.h&gt;</emphasis>
<anchor xml:id="_a00029_source_1l00035"/>00035 <emphasis role="preprocessor">#if&#32;(USHRT_MAX&#32;==&#32;0xffffffffUL)</emphasis>
<anchor xml:id="_a00029_source_1l00036"/>00036 <emphasis role="preprocessor">#define&#32;MH_UINT32&#32;unsigned&#32;short</emphasis>
<anchor xml:id="_a00029_source_1l00037"/>00037 <emphasis role="preprocessor">#elif&#32;(UINT_MAX&#32;==&#32;0xffffffffUL)</emphasis>
<anchor xml:id="_a00029_source_1l00038"/>00038 <emphasis role="preprocessor">#define&#32;MH_UINT32&#32;unsigned&#32;int</emphasis>
<anchor xml:id="_a00029_source_1l00039"/>00039 <emphasis role="preprocessor">#elif&#32;(ULONG_MAX&#32;==&#32;0xffffffffUL)</emphasis>
<anchor xml:id="_a00029_source_1l00040"/>00040 <emphasis role="preprocessor">#define&#32;MH_UINT32&#32;unsigned&#32;long</emphasis>
<anchor xml:id="_a00029_source_1l00041"/>00041 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_a00029_source_1l00042"/>00042 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_a00029_source_1l00043"/>00043 
<anchor xml:id="_a00029_source_1l00044"/>00044 <emphasis role="preprocessor">#if&#32;!defined(MH_UINT32)</emphasis>
<anchor xml:id="_a00029_source_1l00045"/>00045 <emphasis role="preprocessor">#error&#32;Unable&#32;to&#32;determine&#32;type&#32;name&#32;for&#32;unsigned&#32;32-bit&#32;int</emphasis>
<anchor xml:id="_a00029_source_1l00046"/>00046 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_a00029_source_1l00047"/>00047 
<anchor xml:id="_a00029_source_1l00048"/>00048 <emphasis role="comment">//&#32;I&apos;m&#32;yet&#32;to&#32;work&#32;on&#32;a&#32;platform&#32;where&#32;&apos;unsigned&#32;char&apos;&#32;is&#32;not&#32;8&#32;bits</emphasis>
<anchor xml:id="_a00029_source_1l00049"/><link linkend="_a00029_a7c2e7a9f901f0ffbf7684ef9c321c6f3_1a7c2e7a9f901f0ffbf7684ef9c321c6f3">00049</link> <emphasis role="preprocessor">#define&#32;MH_UINT8&#32;unsigned&#32;char</emphasis>
<anchor xml:id="_a00029_source_1l00050"/>00050 
<anchor xml:id="_a00029_source_1l00053"/>00053 
<anchor xml:id="_a00029_source_1l00054"/><link linkend="_a00029_a9cc98d1e627311e4d5fcf960552292c0_1a9cc98d1e627311e4d5fcf960552292c0">00054</link> &#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_a00029_a9cc98d1e627311e4d5fcf960552292c0_1a9cc98d1e627311e4d5fcf960552292c0">PMurHash32_Process</link>(MH_UINT32&#32;*ph1,&#32;MH_UINT32&#32;*pcarry,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*key,&#32;<emphasis role="keywordtype">int</emphasis>&#32;len);
<anchor xml:id="_a00029_source_1l00055"/><link linkend="_a00029_a15e304d5c33e5e469f836873e51c14b9_1a15e304d5c33e5e469f836873e51c14b9">00055</link> MH_UINT32&#32;<link linkend="_a00029_a15e304d5c33e5e469f836873e51c14b9_1a15e304d5c33e5e469f836873e51c14b9">PMurHash32_Result</link>(MH_UINT32&#32;h1,&#32;MH_UINT32&#32;carry,&#32;MH_UINT32&#32;total_length);
<anchor xml:id="_a00029_source_1l00056"/><link linkend="_a00029_a3ac44019c8d81f2f99ec851b20c6deac_1a3ac44019c8d81f2f99ec851b20c6deac">00056</link> MH_UINT32&#32;<link linkend="_a00029_a3ac44019c8d81f2f99ec851b20c6deac_1a3ac44019c8d81f2f99ec851b20c6deac">PMurHash32</link>(MH_UINT32&#32;seed,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*key,&#32;<emphasis role="keywordtype">int</emphasis>&#32;len);
<anchor xml:id="_a00029_source_1l00057"/><link linkend="_a00029_a681a1c2e5d17dd94fb6ddb259dd0ced7_1a681a1c2e5d17dd94fb6ddb259dd0ced7">00057</link> &#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_a00029_a681a1c2e5d17dd94fb6ddb259dd0ced7_1a681a1c2e5d17dd94fb6ddb259dd0ced7">PMurHash32_test</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*key,&#32;<emphasis role="keywordtype">int</emphasis>&#32;len,&#32;MH_UINT32&#32;seed,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*out);
<anchor xml:id="_a00029_source_1l00058"/>00058 
<anchor xml:id="_a00029_source_1l00061"/>00061 
<anchor xml:id="_a00029_source_1l00062"/>00062 <emphasis role="comment">//&#32;I&#32;used&#32;ugly&#32;type&#32;names&#32;in&#32;the&#32;header&#32;to&#32;avoid&#32;potential&#32;conflicts&#32;with</emphasis>
<anchor xml:id="_a00029_source_1l00063"/>00063 <emphasis role="comment">//&#32;application&#32;or&#32;system&#32;typedefs&#32;&amp;&#32;defines.&#32;Since&#32;I&apos;m&#32;not&#32;including&#32;any&#32;more</emphasis>
<anchor xml:id="_a00029_source_1l00064"/>00064 <emphasis role="comment">//&#32;headers&#32;below&#32;here&#32;I&#32;can&#32;rename&#32;these&#32;so&#32;that&#32;the&#32;code&#32;reads&#32;like&#32;C99</emphasis>
<anchor xml:id="_a00029_source_1l00065"/>00065 <emphasis role="preprocessor">#undef&#32;uint32_t</emphasis>
<anchor xml:id="_a00029_source_1l00066"/><link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">00066</link> <emphasis role="preprocessor">#define&#32;uint32_t&#32;MH_UINT32</emphasis>
<anchor xml:id="_a00029_source_1l00067"/>00067 <emphasis role="preprocessor">#undef&#32;uint8_t</emphasis>
<anchor xml:id="_a00029_source_1l00068"/><link linkend="_a00029_ab077fa1127453be2bd9d4c3c8a768fa7_1ab077fa1127453be2bd9d4c3c8a768fa7">00068</link> <emphasis role="preprocessor">#define&#32;uint8_t&#32;&#32;MH_UINT8</emphasis>
<anchor xml:id="_a00029_source_1l00069"/>00069 
<anchor xml:id="_a00029_source_1l00070"/>00070 <emphasis role="comment">//&#32;MSVC&#32;warnings&#32;we&#32;choose&#32;to&#32;ignore</emphasis>
<anchor xml:id="_a00029_source_1l00071"/>00071 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)</emphasis>
<anchor xml:id="_a00029_source_1l00072"/>00072 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#pragma&#32;warning(disable&#32;:&#32;4127)&#32;</emphasis><emphasis role="comment">//&#32;conditional&#32;expression&#32;is&#32;constant</emphasis>
<anchor xml:id="_a00029_source_1l00073"/>00073 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_a00029_source_1l00074"/>00074 
<anchor xml:id="_a00029_source_1l00075"/>00075 <emphasis role="comment">//-----------------------------------------------------------------------------</emphasis>
<anchor xml:id="_a00029_source_1l00076"/>00076 <emphasis role="comment">//&#32;Endianess,&#32;misalignment&#32;capabilities&#32;and&#32;util&#32;macros</emphasis>
<anchor xml:id="_a00029_source_1l00077"/>00077 <emphasis role="comment">//</emphasis>
<anchor xml:id="_a00029_source_1l00078"/>00078 <emphasis role="comment">//&#32;The&#32;following&#32;3&#32;macros&#32;are&#32;defined&#32;in&#32;this&#32;section.&#32;The&#32;other&#32;macros&#32;defined</emphasis>
<anchor xml:id="_a00029_source_1l00079"/>00079 <emphasis role="comment">//&#32;are&#32;only&#32;needed&#32;to&#32;help&#32;derive&#32;these&#32;3.</emphasis>
<anchor xml:id="_a00029_source_1l00080"/>00080 <emphasis role="comment">//</emphasis>
<anchor xml:id="_a00029_source_1l00081"/>00081 <emphasis role="comment">//&#32;READ_UINT32(x)&#32;&#32;&#32;Read&#32;a&#32;little&#32;endian&#32;unsigned&#32;32-bit&#32;int</emphasis>
<anchor xml:id="_a00029_source_1l00082"/>00082 <emphasis role="comment">//&#32;UNALIGNED_SAFE&#32;&#32;&#32;Defined&#32;if&#32;READ_UINT32&#32;works&#32;on&#32;non-word&#32;boundaries</emphasis>
<anchor xml:id="_a00029_source_1l00083"/>00083 <emphasis role="comment">//&#32;ROTL32(x,r)&#32;&#32;&#32;&#32;&#32;&#32;Rotate&#32;x&#32;left&#32;by&#32;r&#32;bits</emphasis>
<anchor xml:id="_a00029_source_1l00084"/>00084 
<anchor xml:id="_a00029_source_1l00085"/>00085 <emphasis role="preprocessor">#if&#32;defined(__ORDER_LITTLE_ENDIAN__)&#32;&amp;&amp;&#32;!&#32;defined(__LITTLE_ENDIAN)</emphasis>
<anchor xml:id="_a00029_source_1l00086"/>00086 <emphasis role="preprocessor">#define&#32;__LITTLE_ENDIAN&#32;__ORDER_LITTLE_ENDIAN__</emphasis>
<anchor xml:id="_a00029_source_1l00087"/>00087 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_a00029_source_1l00088"/>00088 
<anchor xml:id="_a00029_source_1l00089"/>00089 <emphasis role="preprocessor">#if&#32;defined(__ORDER_BIG_ENDIAN__)&#32;&amp;&amp;&#32;!&#32;defined(__BIG_ENDIAN)</emphasis>
<anchor xml:id="_a00029_source_1l00090"/>00090 <emphasis role="preprocessor">#define&#32;__BIG_ENDIAN&#32;__ORDER_BIG_ENDIAN__</emphasis>
<anchor xml:id="_a00029_source_1l00091"/>00091 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_a00029_source_1l00092"/>00092 
<anchor xml:id="_a00029_source_1l00093"/>00093 <emphasis role="preprocessor">#if&#32;defined(__BYTE_ORDER__)&#32;&amp;&amp;&#32;!&#32;defined(__BYTE_ORDER)</emphasis>
<anchor xml:id="_a00029_source_1l00094"/>00094 <emphasis role="preprocessor">#define&#32;__BYTE_ORDER&#32;__BYTE_ORDER__</emphasis>
<anchor xml:id="_a00029_source_1l00095"/>00095 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_a00029_source_1l00096"/>00096 
<anchor xml:id="_a00029_source_1l00097"/>00097 <emphasis role="comment">//&#32;Convention&#32;is&#32;to&#32;define&#32;__BYTE_ORDER&#32;==&#32;to&#32;one&#32;of&#32;these&#32;values</emphasis>
<anchor xml:id="_a00029_source_1l00098"/>00098 <emphasis role="preprocessor">#if&#32;!defined(__BIG_ENDIAN)</emphasis>
<anchor xml:id="_a00029_source_1l00099"/><link linkend="_a00029_aa2c4bb6d7658760c2b3c668362e126ea_1aa2c4bb6d7658760c2b3c668362e126ea">00099</link> <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#define&#32;__BIG_ENDIAN&#32;4321</emphasis>
<anchor xml:id="_a00029_source_1l00100"/>00100 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_a00029_source_1l00101"/>00101 <emphasis role="preprocessor">#if&#32;!defined(__LITTLE_ENDIAN)</emphasis>
<anchor xml:id="_a00029_source_1l00102"/><link linkend="_a00029_aeccf3e279c16687d91cd28d0463cbde6_1aeccf3e279c16687d91cd28d0463cbde6">00102</link> <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#define&#32;__LITTLE_ENDIAN&#32;1234</emphasis>
<anchor xml:id="_a00029_source_1l00103"/>00103 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_a00029_source_1l00104"/>00104 
<anchor xml:id="_a00029_source_1l00105"/>00105 <emphasis role="comment">//&#32;I386</emphasis>
<anchor xml:id="_a00029_source_1l00106"/>00106 <emphasis role="preprocessor">#if&#32;defined(_M_IX86)&#32;||&#32;defined(__i386__)&#32;||&#32;defined(__i386)&#32;||&#32;defined(i386)</emphasis>
<anchor xml:id="_a00029_source_1l00107"/>00107 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#define&#32;__BYTE_ORDER&#32;__LITTLE_ENDIAN</emphasis>
<anchor xml:id="_a00029_source_1l00108"/>00108 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#define&#32;UNALIGNED_SAFE</emphasis>
<anchor xml:id="_a00029_source_1l00109"/>00109 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_a00029_source_1l00110"/>00110 
<anchor xml:id="_a00029_source_1l00111"/>00111 <emphasis role="comment">//&#32;gcc&#32;&apos;may&apos;&#32;define&#32;__LITTLE_ENDIAN__&#32;or&#32;__BIG_ENDIAN__&#32;to&#32;1&#32;(Note&#32;the&#32;trailing</emphasis>
<anchor xml:id="_a00029_source_1l00112"/>00112 <emphasis role="comment">//&#32;__),&#32;or&#32;even&#32;_LITTLE_ENDIAN&#32;or&#32;_BIG_ENDIAN&#32;(Note&#32;the&#32;single&#32;_&#32;prefix)</emphasis>
<anchor xml:id="_a00029_source_1l00113"/>00113 <emphasis role="preprocessor">#if&#32;!defined(__BYTE_ORDER)</emphasis>
<anchor xml:id="_a00029_source_1l00114"/>00114 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#if&#32;defined(__LITTLE_ENDIAN__)&#32;&amp;&amp;&#32;__LITTLE_ENDIAN__&#32;==&#32;1&#32;||&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00115"/>00115 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defined(_LITTLE_ENDIAN)&#32;&amp;&amp;&#32;_LITTLE_ENDIAN&#32;==&#32;1</emphasis>
<anchor xml:id="_a00029_source_1l00116"/>00116 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#define&#32;__BYTE_ORDER&#32;__LITTLE_ENDIAN</emphasis>
<anchor xml:id="_a00029_source_1l00117"/>00117 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#elif&#32;defined(__BIG_ENDIAN__)&#32;&amp;&amp;&#32;__BIG_ENDIAN__&#32;==&#32;1&#32;||&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00118"/>00118 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;defined(_BIG_ENDIAN)&#32;&amp;&amp;&#32;_BIG_ENDIAN&#32;==&#32;1</emphasis>
<anchor xml:id="_a00029_source_1l00119"/>00119 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#define&#32;__BYTE_ORDER&#32;__BIG_ENDIAN</emphasis>
<anchor xml:id="_a00029_source_1l00120"/>00120 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_a00029_source_1l00121"/>00121 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_a00029_source_1l00122"/>00122 
<anchor xml:id="_a00029_source_1l00123"/>00123 <emphasis role="comment">//&#32;gcc&#32;(usually)&#32;defines&#32;xEL/EB&#32;macros&#32;for&#32;ARM&#32;and&#32;MIPS&#32;endianess</emphasis>
<anchor xml:id="_a00029_source_1l00124"/>00124 <emphasis role="preprocessor">#if&#32;!defined(__BYTE_ORDER)</emphasis>
<anchor xml:id="_a00029_source_1l00125"/>00125 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#if&#32;defined(__ARMEL__)&#32;||&#32;defined(__MIPSEL__)</emphasis>
<anchor xml:id="_a00029_source_1l00126"/>00126 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#define&#32;__BYTE_ORDER&#32;__LITTLE_ENDIAN</emphasis>
<anchor xml:id="_a00029_source_1l00127"/>00127 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_a00029_source_1l00128"/>00128 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#if&#32;defined(__ARMEB__)&#32;||&#32;defined(__MIPSEB__)</emphasis>
<anchor xml:id="_a00029_source_1l00129"/>00129 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#define&#32;__BYTE_ORDER&#32;__BIG_ENDIAN</emphasis>
<anchor xml:id="_a00029_source_1l00130"/>00130 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_a00029_source_1l00131"/>00131 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_a00029_source_1l00132"/>00132 
<anchor xml:id="_a00029_source_1l00133"/>00133 <emphasis role="comment">//&#32;Now&#32;find&#32;best&#32;way&#32;we&#32;can&#32;to&#32;READ_UINT32</emphasis>
<anchor xml:id="_a00029_source_1l00134"/>00134 <emphasis role="preprocessor">#if&#32;__BYTE_ORDER&#32;==&#32;__LITTLE_ENDIAN</emphasis>
<anchor xml:id="_a00029_source_1l00135"/>00135 <emphasis role="comment">//&#32;CPU&#32;endian&#32;matches&#32;murmurhash&#32;algorithm,&#32;so&#32;read&#32;32-bit&#32;word&#32;directly</emphasis>
<anchor xml:id="_a00029_source_1l00136"/>00136 <emphasis role="preprocessor">#define&#32;READ_UINT32(ptr)&#32;(*((uint32_t&#32;*)(ptr)))</emphasis>
<anchor xml:id="_a00029_source_1l00137"/>00137 <emphasis role="preprocessor">#elif&#32;__BYTE_ORDER&#32;==&#32;__BIG_ENDIAN</emphasis>
<anchor xml:id="_a00029_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Add&#32;additional&#32;cases&#32;below&#32;where&#32;a&#32;compiler&#32;provided&#32;bswap32&#32;is&#32;available</emphasis>
<anchor xml:id="_a00029_source_1l00139"/>00139 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#if&#32;defined(__GNUC__)&#32;&amp;&amp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00140"/>00140 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(__GNUC__&#32;&gt;&#32;4&#32;||&#32;(__GNUC__&#32;==&#32;4&#32;&amp;&amp;&#32;__GNUC_MINOR__&#32;&gt;=&#32;3))</emphasis>
<anchor xml:id="_a00029_source_1l00141"/>00141 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#define&#32;READ_UINT32(ptr)&#32;(__builtin_bswap32(*((uint32_t&#32;*)(ptr))))</emphasis>
<anchor xml:id="_a00029_source_1l00142"/>00142 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_a00029_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Without&#32;a&#32;known&#32;fast&#32;bswap32&#32;we&apos;re&#32;just&#32;as&#32;well&#32;off&#32;doing&#32;this</emphasis>
<anchor xml:id="_a00029_source_1l00144"/>00144 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#define&#32;READ_UINT32(ptr)&#32;(ptr[0]&#32;|&#32;ptr[1]&#32;&lt;&lt;&#32;8&#32;|&#32;ptr[2]&#32;&lt;&lt;&#32;16&#32;|&#32;ptr[3]&#32;&lt;&lt;&#32;24)</emphasis>
<anchor xml:id="_a00029_source_1l00145"/>00145 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#define&#32;UNALIGNED_SAFE</emphasis>
<anchor xml:id="_a00029_source_1l00146"/>00146 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_a00029_source_1l00147"/>00147 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_a00029_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Unknown&#32;endianess&#32;so&#32;last&#32;resort&#32;is&#32;to&#32;read&#32;individual&#32;bytes</emphasis>
<anchor xml:id="_a00029_source_1l00149"/><link linkend="_a00029_ab3afb7ef76ced48cafdcef09407df75e_1ab3afb7ef76ced48cafdcef09407df75e">00149</link> <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#define&#32;READ_UINT32(ptr)&#32;(ptr[0]&#32;|&#32;ptr[1]&#32;&lt;&lt;&#32;8&#32;|&#32;ptr[2]&#32;&lt;&lt;&#32;16&#32;|&#32;ptr[3]&#32;&lt;&lt;&#32;24)</emphasis>
<anchor xml:id="_a00029_source_1l00150"/>00150 
<anchor xml:id="_a00029_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Since&#32;we&apos;re&#32;not&#32;doing&#32;word-reads&#32;we&#32;can&#32;skip&#32;the&#32;messing&#32;about&#32;with</emphasis>
<anchor xml:id="_a00029_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;*&#32;realignment
<anchor xml:id="_a00029_source_1l00153"/><link linkend="_a00029_a013b95e31823324ac60880c16fb846b8_1a013b95e31823324ac60880c16fb846b8">00153</link> <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#define&#32;UNALIGNED_SAFE</emphasis>
<anchor xml:id="_a00029_source_1l00154"/>00154 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_a00029_source_1l00155"/>00155 
<anchor xml:id="_a00029_source_1l00156"/>00156 <emphasis role="comment">//&#32;Find&#32;best&#32;way&#32;to&#32;ROTL32</emphasis>
<anchor xml:id="_a00029_source_1l00157"/>00157 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)</emphasis>
<anchor xml:id="_a00029_source_1l00158"/>00158 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#include&#32;&lt;stdlib.h&gt;</emphasis>&#32;<emphasis role="comment">//&#32;Microsoft&#32;put&#32;_rotl&#32;declaration&#32;in&#32;here</emphasis>
<anchor xml:id="_a00029_source_1l00159"/>00159 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#define&#32;rotl32(x,&#32;r)&#32;_rotl(x,&#32;r)</emphasis>
<anchor xml:id="_a00029_source_1l00160"/>00160 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_a00029_source_1l00161"/>00161 <emphasis role="comment">//&#32;gcc&#32;recognises&#32;this&#32;code&#32;and&#32;generates&#32;a&#32;rotate&#32;instruction&#32;for&#32;CPUs&#32;with&#32;one</emphasis>
<anchor xml:id="_a00029_source_1l00162"/>00162 
<anchor xml:id="_a00029_source_1l00163"/>00163 <emphasis role="preprocessor">#if&#32;!defined(rotl32)</emphasis>
<anchor xml:id="_a00029_source_1l00164"/><link linkend="_a00029_a6b7ad100703fa6fed06b5594a8cddced_1a6b7ad100703fa6fed06b5594a8cddced">00164</link> <emphasis role="preprocessor">#define&#32;rotl32(x,&#32;r)&#32;(((uint32_t)x&#32;&lt;&lt;&#32;r)&#32;|&#32;((uint32_t)x&#32;&gt;&gt;&#32;(32&#32;-&#32;r)))</emphasis>
<anchor xml:id="_a00029_source_1l00165"/>00165 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_a00029_source_1l00166"/>00166 
<anchor xml:id="_a00029_source_1l00167"/>00167 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_a00029_source_1l00168"/>00168 
<anchor xml:id="_a00029_source_1l00169"/>00169 <emphasis role="comment">//-----------------------------------------------------------------------------</emphasis>
<anchor xml:id="_a00029_source_1l00170"/>00170 <emphasis role="comment">//&#32;Core&#32;murmurhash&#32;algorithm&#32;macros</emphasis>
<anchor xml:id="_a00029_source_1l00171"/>00171 
<anchor xml:id="_a00029_source_1l00172"/><link linkend="_a00029_a44779f18d87e71c78fc9fbf9dc88537d_1a44779f18d87e71c78fc9fbf9dc88537d">00172</link> <emphasis role="preprocessor">#define&#32;C1&#32;(0xcc9e2d51)</emphasis>
<anchor xml:id="_a00029_source_1l00173"/><link linkend="_a00029_ad6fc13322a4f1c314332ff34aa8b3fa0_1ad6fc13322a4f1c314332ff34aa8b3fa0">00173</link> <emphasis role="preprocessor">#define&#32;C2&#32;(0x1b873593)</emphasis>
<anchor xml:id="_a00029_source_1l00174"/>00174 
<anchor xml:id="_a00029_source_1l00175"/>00175 <emphasis role="comment">//&#32;This&#32;is&#32;the&#32;main&#32;processing&#32;body&#32;of&#32;the&#32;algorithm.&#32;It&#32;operates</emphasis>
<anchor xml:id="_a00029_source_1l00176"/>00176 <emphasis role="comment">//&#32;on&#32;each&#32;full&#32;32-bits&#32;of&#32;input.</emphasis>
<anchor xml:id="_a00029_source_1l00177"/><link linkend="_a00029_a1dc85f68c0dce10481c733a718aa2458_1a1dc85f68c0dce10481c733a718aa2458">00177</link> <emphasis role="preprocessor">#define&#32;DOBLOCK(h1,&#32;k1)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00178"/>00178 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;do&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00179"/>00179 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k1&#32;*=&#32;C1;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00180"/>00180 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k1&#32;=&#32;rotl32(k1,&#32;15);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00181"/>00181 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k1&#32;*=&#32;C2;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00182"/>00182 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00183"/>00183 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;h1&#32;^=&#32;k1;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00184"/>00184 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;h1&#32;=&#32;rotl32(h1,&#32;13);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00185"/>00185 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;h1&#32;=&#32;h1&#32;*&#32;5&#32;+&#32;0xe6546b64;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00186"/>00186 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;while&#32;(0)</emphasis>
<anchor xml:id="_a00029_source_1l00187"/>00187 
<anchor xml:id="_a00029_source_1l00188"/>00188 <emphasis role="comment">//&#32;Append&#32;unaligned&#32;bytes&#32;to&#32;carry,&#32;forcing&#32;hash&#32;churn&#32;if&#32;we&#32;have&#32;4&#32;bytes</emphasis>
<anchor xml:id="_a00029_source_1l00189"/>00189 <emphasis role="comment">//&#32;cnt=bytes&#32;to&#32;process,&#32;h1=name&#32;of&#32;h1&#32;var,&#32;c=carry,&#32;n=bytes&#32;in&#32;c,</emphasis>
<anchor xml:id="_a00029_source_1l00190"/>00190 <emphasis role="comment">//&#32;ptr/len=payload</emphasis>
<anchor xml:id="_a00029_source_1l00191"/><link linkend="_a00029_af11fb5a047f2add1d41dfdf0d305161c_1af11fb5a047f2add1d41dfdf0d305161c">00191</link> <emphasis role="preprocessor">#define&#32;DOBYTES(cnt,&#32;h1,&#32;c,&#32;n,&#32;ptr,&#32;len)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00192"/>00192 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;do&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00193"/>00193 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int&#32;_i&#32;=&#32;cnt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00194"/>00194 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;while&#32;(_i--)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00195"/>00195 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;c&#32;&gt;&gt;&#32;8&#32;|&#32;*ptr++&#32;&lt;&lt;&#32;24;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00196"/>00196 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n++;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00197"/>00197 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;len--;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00198"/>00198 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(n&#32;==&#32;4)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00199"/>00199 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DOBLOCK(h1,&#32;c);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00200"/>00200 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00201"/>00201 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00202"/>00202 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_a00029_source_1l00203"/>00203 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;while&#32;(0)</emphasis>
<anchor xml:id="_a00029_source_1l00204"/>00204 
<anchor xml:id="_a00029_source_1l00205"/>00205 <emphasis role="comment">//---------------------------------------------------------------------------</emphasis>
<anchor xml:id="_a00029_source_1l00206"/>00206 
<anchor xml:id="_a00029_source_1l00207"/>00207 <emphasis role="comment">//&#32;Main&#32;hashing&#32;function.&#32;Initialize&#32;carry&#32;to&#32;0&#32;and&#32;h1&#32;to&#32;0&#32;or&#32;an&#32;initial&#32;seed</emphasis>
<anchor xml:id="_a00029_source_1l00208"/>00208 <emphasis role="comment">//&#32;if&#32;wanted.&#32;Both&#32;ph1&#32;and&#32;pcarry&#32;are&#32;required&#32;arguments.</emphasis>
<anchor xml:id="_a00029_source_1l00209"/><link linkend="_a00029_ac1d0c342d1226500bff30374454e8e4f_1ac1d0c342d1226500bff30374454e8e4f">00209</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_a00029_a9cc98d1e627311e4d5fcf960552292c0_1a9cc98d1e627311e4d5fcf960552292c0">PMurHash32_Process</link>(<link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">uint32_t</link>&#32;*ph1,&#32;<link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">uint32_t</link>&#32;*pcarry,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*key,&#32;<emphasis role="keywordtype">int</emphasis>&#32;len)&#32;{
<anchor xml:id="_a00029_source_1l00210"/>00210 &#32;&#32;&#32;&#32;<link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">uint32_t</link>&#32;h1&#32;=&#32;*ph1;
<anchor xml:id="_a00029_source_1l00211"/>00211 &#32;&#32;&#32;&#32;<link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">uint32_t</link>&#32;c&#32;=&#32;*pcarry;
<anchor xml:id="_a00029_source_1l00212"/>00212 
<anchor xml:id="_a00029_source_1l00213"/>00213 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_a00029_ab077fa1127453be2bd9d4c3c8a768fa7_1ab077fa1127453be2bd9d4c3c8a768fa7">uint8_t</link>&#32;*ptr&#32;=&#32;(<link linkend="_a00029_ab077fa1127453be2bd9d4c3c8a768fa7_1ab077fa1127453be2bd9d4c3c8a768fa7">uint8_t</link>*)&#32;key;
<anchor xml:id="_a00029_source_1l00214"/>00214 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_a00029_ab077fa1127453be2bd9d4c3c8a768fa7_1ab077fa1127453be2bd9d4c3c8a768fa7">uint8_t</link>&#32;*end;
<anchor xml:id="_a00029_source_1l00215"/>00215 
<anchor xml:id="_a00029_source_1l00216"/>00216 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Extract&#32;carry&#32;count&#32;from&#32;low&#32;2&#32;bits&#32;of&#32;c&#32;value</emphasis>
<anchor xml:id="_a00029_source_1l00217"/>00217 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;c&#32;&amp;&#32;3;
<anchor xml:id="_a00029_source_1l00218"/>00218 
<anchor xml:id="_a00029_source_1l00219"/>00219 <emphasis role="preprocessor">#if&#32;defined(UNALIGNED_SAFE)</emphasis>
<anchor xml:id="_a00029_source_1l00220"/>00220 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;CPU&#32;handles&#32;unaligned&#32;word&#32;access</emphasis>
<anchor xml:id="_a00029_source_1l00221"/>00221 
<anchor xml:id="_a00029_source_1l00222"/>00222 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Consume&#32;any&#32;carry&#32;bytes</emphasis>
<anchor xml:id="_a00029_source_1l00223"/>00223 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;(4&#32;-&#32;n)&#32;&amp;&#32;3;
<anchor xml:id="_a00029_source_1l00224"/>00224 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&amp;&amp;&#32;i&#32;&lt;=&#32;len)&#32;{
<anchor xml:id="_a00029_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00029_af11fb5a047f2add1d41dfdf0d305161c_1af11fb5a047f2add1d41dfdf0d305161c">DOBYTES</link>(i,&#32;h1,&#32;c,&#32;n,&#32;ptr,&#32;len);
<anchor xml:id="_a00029_source_1l00226"/>00226 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00029_source_1l00227"/>00227 
<anchor xml:id="_a00029_source_1l00228"/>00228 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Process&#32;32-bit&#32;chunks</emphasis>
<anchor xml:id="_a00029_source_1l00229"/>00229 &#32;&#32;&#32;&#32;end&#32;=&#32;ptr&#32;+&#32;len&#32;/&#32;4&#32;*&#32;4;
<anchor xml:id="_a00029_source_1l00230"/>00230 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;ptr&#32;&lt;&#32;end;&#32;ptr&#32;+=&#32;4)&#32;{
<anchor xml:id="_a00029_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">uint32_t</link>&#32;k1&#32;=&#32;<link linkend="_a00029_ab3afb7ef76ced48cafdcef09407df75e_1ab3afb7ef76ced48cafdcef09407df75e">READ_UINT32</link>(ptr);
<anchor xml:id="_a00029_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00029_a1dc85f68c0dce10481c733a718aa2458_1a1dc85f68c0dce10481c733a718aa2458">DOBLOCK</link>(h1,&#32;k1);
<anchor xml:id="_a00029_source_1l00233"/>00233 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00029_source_1l00234"/>00234 
<anchor xml:id="_a00029_source_1l00235"/>00235 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#else&#32;&#32;</emphasis><emphasis role="comment">//UNALIGNED_SAFE</emphasis>
<anchor xml:id="_a00029_source_1l00236"/>00236 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;CPU&#32;does&#32;not&#32;handle&#32;unaligned&#32;word&#32;access</emphasis>
<anchor xml:id="_a00029_source_1l00237"/>00237 
<anchor xml:id="_a00029_source_1l00238"/>00238 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Consume&#32;enough&#32;so&#32;that&#32;the&#32;next&#32;data&#32;byte&#32;is&#32;word&#32;aligned</emphasis>
<anchor xml:id="_a00029_source_1l00239"/>00239 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;-(long)&#32;ptr&#32;&amp;&#32;3;
<anchor xml:id="_a00029_source_1l00240"/>00240 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&amp;&amp;&#32;i&#32;&lt;=&#32;len)&#32;{
<anchor xml:id="_a00029_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00029_af11fb5a047f2add1d41dfdf0d305161c_1af11fb5a047f2add1d41dfdf0d305161c">DOBYTES</link>(i,&#32;h1,&#32;c,&#32;n,&#32;ptr,&#32;len);
<anchor xml:id="_a00029_source_1l00242"/>00242 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00029_source_1l00243"/>00243 
<anchor xml:id="_a00029_source_1l00244"/>00244 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&apos;re&#32;now&#32;aligned.&#32;Process&#32;in&#32;aligned&#32;blocks.&#32;Specialise&#32;for&#32;each</emphasis>
<anchor xml:id="_a00029_source_1l00245"/>00245 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;possible&#32;carry&#32;count</emphasis>
<anchor xml:id="_a00029_source_1l00246"/>00246 &#32;&#32;&#32;&#32;end&#32;=&#32;ptr&#32;+&#32;len&#32;/&#32;4&#32;*&#32;4;
<anchor xml:id="_a00029_source_1l00247"/>00247 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(n)&#32;{&#32;<emphasis role="comment">//&#32;how&#32;many&#32;bytes&#32;in&#32;c</emphasis>
<anchor xml:id="_a00029_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0:&#32;<emphasis role="comment">//&#32;c=[----]&#32;&#32;w=[3210]&#32;&#32;b=[3210]=w&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&apos;=[----]</emphasis>
<anchor xml:id="_a00029_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;ptr&#32;&lt;&#32;end;&#32;ptr&#32;+=&#32;4)&#32;{
<anchor xml:id="_a00029_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">uint32_t</link>&#32;k1&#32;=&#32;<link linkend="_a00029_ab3afb7ef76ced48cafdcef09407df75e_1ab3afb7ef76ced48cafdcef09407df75e">READ_UINT32</link>(ptr);
<anchor xml:id="_a00029_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00029_a1dc85f68c0dce10481c733a718aa2458_1a1dc85f68c0dce10481c733a718aa2458">DOBLOCK</link>(h1,&#32;k1);
<anchor xml:id="_a00029_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_a00029_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_a00029_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:&#32;<emphasis role="comment">//&#32;c=[0---]&#32;&#32;w=[4321]&#32;&#32;b=[3210]=c&gt;&gt;24|w&lt;&lt;8&#32;&#32;&#32;c&apos;=[4---]</emphasis>
<anchor xml:id="_a00029_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;ptr&#32;&lt;&#32;end;&#32;ptr&#32;+=&#32;4)&#32;{
<anchor xml:id="_a00029_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">uint32_t</link>&#32;k1&#32;=&#32;c&#32;&gt;&gt;&#32;24;
<anchor xml:id="_a00029_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;<link linkend="_a00029_ab3afb7ef76ced48cafdcef09407df75e_1ab3afb7ef76ced48cafdcef09407df75e">READ_UINT32</link>(ptr);
<anchor xml:id="_a00029_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k1&#32;|=&#32;c&#32;&lt;&lt;&#32;8;
<anchor xml:id="_a00029_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00029_a1dc85f68c0dce10481c733a718aa2458_1a1dc85f68c0dce10481c733a718aa2458">DOBLOCK</link>(h1,&#32;k1);
<anchor xml:id="_a00029_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_a00029_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_a00029_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:&#32;<emphasis role="comment">//&#32;c=[10--]&#32;&#32;w=[5432]&#32;&#32;b=[3210]=c&gt;&gt;16|w&lt;&lt;16&#32;&#32;c&apos;=[54--]</emphasis>
<anchor xml:id="_a00029_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;ptr&#32;&lt;&#32;end;&#32;ptr&#32;+=&#32;4)&#32;{
<anchor xml:id="_a00029_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">uint32_t</link>&#32;k1&#32;=&#32;c&#32;&gt;&gt;&#32;16;
<anchor xml:id="_a00029_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;<link linkend="_a00029_ab3afb7ef76ced48cafdcef09407df75e_1ab3afb7ef76ced48cafdcef09407df75e">READ_UINT32</link>(ptr);
<anchor xml:id="_a00029_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k1&#32;|=&#32;c&#32;&lt;&lt;&#32;16;
<anchor xml:id="_a00029_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00029_a1dc85f68c0dce10481c733a718aa2458_1a1dc85f68c0dce10481c733a718aa2458">DOBLOCK</link>(h1,&#32;k1);
<anchor xml:id="_a00029_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_a00029_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_a00029_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;3:&#32;<emphasis role="comment">//&#32;c=[210-]&#32;&#32;w=[6543]&#32;&#32;b=[3210]=c&gt;&gt;8|w&lt;&lt;24&#32;&#32;&#32;c&apos;=[654-]</emphasis>
<anchor xml:id="_a00029_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;ptr&#32;&lt;&#32;end;&#32;ptr&#32;+=&#32;4)&#32;{
<anchor xml:id="_a00029_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">uint32_t</link>&#32;k1&#32;=&#32;c&#32;&gt;&gt;&#32;8;
<anchor xml:id="_a00029_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;<link linkend="_a00029_ab3afb7ef76ced48cafdcef09407df75e_1ab3afb7ef76ced48cafdcef09407df75e">READ_UINT32</link>(ptr);
<anchor xml:id="_a00029_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k1&#32;|=&#32;c&#32;&lt;&lt;&#32;24;
<anchor xml:id="_a00029_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00029_a1dc85f68c0dce10481c733a718aa2458_1a1dc85f68c0dce10481c733a718aa2458">DOBLOCK</link>(h1,&#32;k1);
<anchor xml:id="_a00029_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_a00029_source_1l00277"/>00277 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00029_source_1l00278"/>00278 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//UNALIGNED_SAFE</emphasis>
<anchor xml:id="_a00029_source_1l00279"/>00279 
<anchor xml:id="_a00029_source_1l00280"/>00280 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Advance&#32;over&#32;whole&#32;32-bit&#32;chunks,&#32;possibly&#32;leaving&#32;1..3&#32;bytes</emphasis>
<anchor xml:id="_a00029_source_1l00281"/>00281 &#32;&#32;&#32;&#32;len&#32;-=&#32;len&#32;/&#32;4&#32;*&#32;4;
<anchor xml:id="_a00029_source_1l00282"/>00282 
<anchor xml:id="_a00029_source_1l00283"/>00283 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Append&#32;any&#32;remaining&#32;bytes&#32;into&#32;carry</emphasis>
<anchor xml:id="_a00029_source_1l00284"/>00284 &#32;&#32;&#32;&#32;<link linkend="_a00029_af11fb5a047f2add1d41dfdf0d305161c_1af11fb5a047f2add1d41dfdf0d305161c">DOBYTES</link>(len,&#32;h1,&#32;c,&#32;n,&#32;ptr,&#32;len);
<anchor xml:id="_a00029_source_1l00285"/>00285 
<anchor xml:id="_a00029_source_1l00286"/>00286 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Copy&#32;out&#32;new&#32;running&#32;hash&#32;and&#32;carry</emphasis>
<anchor xml:id="_a00029_source_1l00287"/>00287 &#32;&#32;&#32;&#32;*ph1&#32;=&#32;h1;
<anchor xml:id="_a00029_source_1l00288"/>00288 &#32;&#32;&#32;&#32;*pcarry&#32;=&#32;(c&#32;&amp;&#32;~0xff)&#32;|&#32;n;
<anchor xml:id="_a00029_source_1l00289"/>00289 }
<anchor xml:id="_a00029_source_1l00290"/>00290 
<anchor xml:id="_a00029_source_1l00291"/>00291 <emphasis role="comment">//---------------------------------------------------------------------------</emphasis>
<anchor xml:id="_a00029_source_1l00292"/>00292 
<anchor xml:id="_a00029_source_1l00293"/>00293 <emphasis role="comment">//&#32;Finalize&#32;a&#32;hash.&#32;To&#32;match&#32;the&#32;original&#32;Murmur3A&#32;the&#32;total_length&#32;must&#32;be</emphasis>
<anchor xml:id="_a00029_source_1l00294"/>00294 <emphasis role="comment">//&#32;provided</emphasis>
<anchor xml:id="_a00029_source_1l00295"/><link linkend="_a00029_ab90ea04ebdd64760be1695b964ef62a0_1ab90ea04ebdd64760be1695b964ef62a0">00295</link> <link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">uint32_t</link>&#32;<link linkend="_a00029_a15e304d5c33e5e469f836873e51c14b9_1a15e304d5c33e5e469f836873e51c14b9">PMurHash32_Result</link>(<link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">uint32_t</link>&#32;h,&#32;<link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">uint32_t</link>&#32;carry,&#32;<link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">uint32_t</link>&#32;total_length)&#32;{
<anchor xml:id="_a00029_source_1l00296"/>00296 &#32;&#32;&#32;&#32;<link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">uint32_t</link>&#32;k1;
<anchor xml:id="_a00029_source_1l00297"/>00297 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;carry&#32;&amp;&#32;3;
<anchor xml:id="_a00029_source_1l00298"/>00298 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n)&#32;{
<anchor xml:id="_a00029_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k1&#32;=&#32;carry&#32;&gt;&gt;&#32;(4&#32;-&#32;n)&#32;*&#32;8;
<anchor xml:id="_a00029_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k1&#32;*=&#32;<link linkend="_a00029_a44779f18d87e71c78fc9fbf9dc88537d_1a44779f18d87e71c78fc9fbf9dc88537d">C1</link>;
<anchor xml:id="_a00029_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k1&#32;=&#32;<link linkend="_a00029_a6b7ad100703fa6fed06b5594a8cddced_1a6b7ad100703fa6fed06b5594a8cddced">rotl32</link>(k1,&#32;15);
<anchor xml:id="_a00029_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k1&#32;*=&#32;<link linkend="_a00029_ad6fc13322a4f1c314332ff34aa8b3fa0_1ad6fc13322a4f1c314332ff34aa8b3fa0">C2</link>;
<anchor xml:id="_a00029_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;h&#32;^=&#32;k1;
<anchor xml:id="_a00029_source_1l00304"/>00304 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00029_source_1l00305"/>00305 &#32;&#32;&#32;&#32;h&#32;^=&#32;total_length;
<anchor xml:id="_a00029_source_1l00306"/>00306 
<anchor xml:id="_a00029_source_1l00307"/>00307 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;fmix</emphasis>
<anchor xml:id="_a00029_source_1l00308"/>00308 &#32;&#32;&#32;&#32;h&#32;^=&#32;h&#32;&gt;&gt;&#32;16;
<anchor xml:id="_a00029_source_1l00309"/>00309 &#32;&#32;&#32;&#32;h&#32;*=&#32;0x85ebca6b;
<anchor xml:id="_a00029_source_1l00310"/>00310 &#32;&#32;&#32;&#32;h&#32;^=&#32;h&#32;&gt;&gt;&#32;13;
<anchor xml:id="_a00029_source_1l00311"/>00311 &#32;&#32;&#32;&#32;h&#32;*=&#32;0xc2b2ae35;
<anchor xml:id="_a00029_source_1l00312"/>00312 &#32;&#32;&#32;&#32;h&#32;^=&#32;h&#32;&gt;&gt;&#32;16;
<anchor xml:id="_a00029_source_1l00313"/>00313 
<anchor xml:id="_a00029_source_1l00314"/>00314 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;h;
<anchor xml:id="_a00029_source_1l00315"/>00315 }
<anchor xml:id="_a00029_source_1l00316"/>00316 
<anchor xml:id="_a00029_source_1l00317"/>00317 <emphasis role="comment">//---------------------------------------------------------------------------</emphasis>
<anchor xml:id="_a00029_source_1l00318"/>00318 
<anchor xml:id="_a00029_source_1l00319"/>00319 <emphasis role="comment">//&#32;Murmur3A&#32;compatable&#32;all-at-once</emphasis>
<anchor xml:id="_a00029_source_1l00320"/><link linkend="_a00029_acae60364a9a51b4dc34984d9a667b7c3_1acae60364a9a51b4dc34984d9a667b7c3">00320</link> <link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">uint32_t</link>&#32;<link linkend="_a00029_a3ac44019c8d81f2f99ec851b20c6deac_1a3ac44019c8d81f2f99ec851b20c6deac">PMurHash32</link>(<link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">uint32_t</link>&#32;seed,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*key,&#32;<emphasis role="keywordtype">int</emphasis>&#32;len)&#32;{
<anchor xml:id="_a00029_source_1l00321"/>00321 &#32;&#32;&#32;&#32;<link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">uint32_t</link>&#32;h1&#32;=&#32;seed,&#32;carry&#32;=&#32;0;
<anchor xml:id="_a00029_source_1l00322"/>00322 &#32;&#32;&#32;&#32;<link linkend="_a00029_a9cc98d1e627311e4d5fcf960552292c0_1a9cc98d1e627311e4d5fcf960552292c0">PMurHash32_Process</link>(&amp;h1,&#32;&amp;carry,&#32;key,&#32;len);
<anchor xml:id="_a00029_source_1l00323"/>00323 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_a00029_a15e304d5c33e5e469f836873e51c14b9_1a15e304d5c33e5e469f836873e51c14b9">PMurHash32_Result</link>(h1,&#32;carry,&#32;len);
<anchor xml:id="_a00029_source_1l00324"/>00324 }
<anchor xml:id="_a00029_source_1l00325"/>00325 
<anchor xml:id="_a00029_source_1l00326"/>00326 <emphasis role="comment">//---------------------------------------------------------------------------</emphasis>
<anchor xml:id="_a00029_source_1l00327"/>00327 
<anchor xml:id="_a00029_source_1l00328"/>00328 <emphasis role="comment">//&#32;Provide&#32;an&#32;API&#32;suitable&#32;for&#32;smhasher</emphasis>
<anchor xml:id="_a00029_source_1l00329"/><link linkend="_a00029_a8b9b59a95c048eec1e60ba75a49d87cc_1a8b9b59a95c048eec1e60ba75a49d87cc">00329</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_a00029_a681a1c2e5d17dd94fb6ddb259dd0ced7_1a681a1c2e5d17dd94fb6ddb259dd0ced7">PMurHash32_test</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*key,&#32;<emphasis role="keywordtype">int</emphasis>&#32;len,&#32;<link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">uint32_t</link>&#32;seed,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*out)&#32;{
<anchor xml:id="_a00029_source_1l00330"/>00330 &#32;&#32;&#32;&#32;<link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">uint32_t</link>&#32;h1&#32;=&#32;seed,&#32;carry&#32;=&#32;0;
<anchor xml:id="_a00029_source_1l00331"/>00331 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_a00029_ab077fa1127453be2bd9d4c3c8a768fa7_1ab077fa1127453be2bd9d4c3c8a768fa7">uint8_t</link>&#32;*ptr&#32;=&#32;(<link linkend="_a00029_ab077fa1127453be2bd9d4c3c8a768fa7_1ab077fa1127453be2bd9d4c3c8a768fa7">uint8_t</link>*)&#32;key;
<anchor xml:id="_a00029_source_1l00332"/>00332 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_a00029_ab077fa1127453be2bd9d4c3c8a768fa7_1ab077fa1127453be2bd9d4c3c8a768fa7">uint8_t</link>&#32;*end&#32;=&#32;ptr&#32;+&#32;len;
<anchor xml:id="_a00029_source_1l00333"/>00333 
<anchor xml:id="_a00029_source_1l00334"/>00334 <emphasis role="preprocessor">#if&#32;0&#32;</emphasis><emphasis role="comment">//&#32;Exercise&#32;the&#32;progressive&#32;processing</emphasis>
<anchor xml:id="_a00029_source_1l00335"/>00335 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(ptr&#32;&lt;&#32;end)&#32;{
<anchor xml:id="_a00029_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//const&#32;uint8_t&#32;*mid&#32;=&#32;ptr&#32;+&#32;rand()%(end-ptr)+1;</emphasis>
<anchor xml:id="_a00029_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_a00029_ab077fa1127453be2bd9d4c3c8a768fa7_1ab077fa1127453be2bd9d4c3c8a768fa7">uint8_t</link>&#32;*mid&#32;=&#32;ptr&#32;+&#32;(rand()&#32;&amp;&#32;0xF);
<anchor xml:id="_a00029_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mid&#32;=&#32;mid&#32;&lt;&#32;end&#32;?&#32;mid&#32;:&#32;end;
<anchor xml:id="_a00029_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00029_a9cc98d1e627311e4d5fcf960552292c0_1a9cc98d1e627311e4d5fcf960552292c0">PMurHash32_Process</link>(&amp;h1,&#32;&amp;carry,&#32;ptr,&#32;mid&#32;-&#32;ptr);
<anchor xml:id="_a00029_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ptr&#32;=&#32;mid;
<anchor xml:id="_a00029_source_1l00341"/>00341 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00029_source_1l00342"/>00342 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_a00029_source_1l00343"/>00343 &#32;&#32;&#32;&#32;<link linkend="_a00029_a9cc98d1e627311e4d5fcf960552292c0_1a9cc98d1e627311e4d5fcf960552292c0">PMurHash32_Process</link>(&amp;h1,&#32;&amp;carry,&#32;ptr,&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;(end&#32;-&#32;ptr));
<anchor xml:id="_a00029_source_1l00344"/>00344 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_a00029_source_1l00345"/>00345 &#32;&#32;&#32;&#32;h1&#32;=&#32;<link linkend="_a00029_a15e304d5c33e5e469f836873e51c14b9_1a15e304d5c33e5e469f836873e51c14b9">PMurHash32_Result</link>(h1,&#32;carry,&#32;len);
<anchor xml:id="_a00029_source_1l00346"/>00346 &#32;&#32;&#32;&#32;*(<link linkend="_a00029_a0ddb3f43e52282b59ee55d059ed74a28_1a0ddb3f43e52282b59ee55d059ed74a28">uint32_t</link>*)&#32;out&#32;=&#32;h1;
<anchor xml:id="_a00029_source_1l00347"/>00347 }
<anchor xml:id="_a00029_source_1l00348"/>00348 
<anchor xml:id="_a00029_source_1l00349"/>00349 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
